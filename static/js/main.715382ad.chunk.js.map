{"version":3,"sources":["services/history.js","features/home/components/Introduction/introduction.js","api/axiosClient.js","api/homeApi.js","features/home/slices/introductionSlice.js","features/home/slices/profileSlice.js","features/home/slices/projectSlice.js","features/home/slices/skillsSlice.js","features/home/slices/contactSlice.js","features/home/pages/index/index.js","App.js","serviceWorker.js","app/store.js","index.js"],"names":["history","createBrowserHistory","Introduction","props","introduction","useSelector","state","linkSocial","Object","keys","socials","map","social","index","key","href","target","className","style","backgroundImage","avatar","fullname","description","axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","data","error","homeApi","fetchData","res","jsonData","console","log","createSlice","name","initialState","reducers","setIntroduction","action","payload","reducer","actions","profile","education","storyOfGlory","whatIDo","setProfile","project","list","setProject","item","skill","skills","workExperience","setSkills","contact","address","call","mail","setContact","types","Profile","React","lazy","Portfolio","Skills","Contact","Mycv","dispatch","useDispatch","useEffect","actionIntroduction","actionProfile","actionProject","projects","actionSkill","actionContact","fallback","id","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootReducer","introductionReducer","profileReducer","projectReducer","skillsReducer","contactReducer","store","configureStore","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.715382ad.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport './introduction.scss'\n\nfunction Introduction(props) {\n    // const {introduction} = props;\n    const introduction = useSelector(state => state.introduction);\n    const linkSocial = (\n        Object.keys(introduction.socials).map((social, index) => {\n            return <a key={index} href={introduction.socials[social]} target=\"_blank\"><i className={`ion-social-${social}-outline`}/></a>\n        })\n    );\n    return (\n        <div className=\"introduction_area text-center background-overlay\"\n             style={{backgroundImage: `url(${introduction.avatar})`}}>\n            <div className=\"classy-table\">\n                <div className=\"classy-table-cell\">\n                    <div className=\"introduction_text_area\">\n                        <div className=\"logo\"/>\n                        <h2>I'm {introduction.fullname}</h2>\n                        <p>{introduction.description}</p>\n                        {/* Social Icon Area Start */}\n                        <div className=\"resume_social_icon\">\n                            {linkSocial}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Introduction\n","import axios from 'axios';\nimport queryString from 'query-string';\n\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\nconst axiosClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'content-type': 'application/json',\n  },\n  paramsSerializer: params => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use(async (config) => {\n  // config token\n\n  return config;\n});\n\naxiosClient.interceptors.response.use((response) => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n}, (error) => {\n  // Handle errors\n  throw error;\n});\n\nexport default axiosClient;","import CONST from \"../app/const\";\nimport axiosClient from \"./axiosClient\";\nimport jsonData from './cv-detail';\n\nconst homeApi = {\n  fetchData: async (params) => {\n      try {\n          // let res = await axiosClient.get('/api/front/react/cv-detail');\n          let res = jsonData;\n          return res.data;\n      } catch (e) {\n          console.log(e)\n      }\n  },\n};\n\nexport default homeApi;\n","import {createSlice} from \"@reduxjs/toolkit\"\nimport CONST from \"../../../app/const\";\n\nconst initialState = {\n    avatar: '',\n    fullname: '',\n    description: '',\n    socials: [],\n};\n\nconst introduction = createSlice({\n    name: 'introduction',\n    initialState: initialState,\n    reducers: {\n        setIntroduction(state, action) {\n            state = action.payload;\n            // state.avatar = CONST.APP_URL + action.payload.avatar;\n            return state\n        }\n    }\n});\n\nconst {reducer, actions} = introduction;\nexport const {setIntroduction} = actions;\n\nexport default reducer\n","import {createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    education: [],\n    storyOfGlory: '',\n    whatIDo: '',\n};\n\nconst profile = createSlice({\n    name: 'introduction',\n    initialState: initialState,\n    reducers: {\n        setProfile(state, action) {\n            state.education = action.payload.education;\n            state.storyOfGlory = action.payload.storyOfGlory;\n            state.whatIDo = action.payload.whatIDo;\n            return state\n        }\n    }\n});\n\nconst {reducer, actions} = profile;\nexport const {setProfile} = actions;\n\nexport default reducer\n","import {createSlice} from \"@reduxjs/toolkit\"\nimport CONST from \"../../../app/const\";\n\nconst initialState = {\n    list: []\n};\n\nconst project = createSlice({\n    name: 'introduction',\n    initialState: initialState,\n    reducers: {\n        setProject(state, action) {\n            state.list = action.payload.map(item => {\n                // item.image = CONST.APP_URL + item.image;\n                return item;\n            });\n            return state\n        }\n    }\n});\n\nconst {reducer, actions} = project;\nexport const {setProject} = actions;\n\nexport default reducer\n","import {createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    skills: [],\n    workExperience: []\n};\n\nconst skill = createSlice({\n    name: 'introduction',\n    initialState: initialState,\n    reducers: {\n        setSkills(state, action) {\n            state.skills = action.payload.skills;\n            state.workExperience = action.payload.workExperience;\n            return state\n        }\n    }\n});\n\nconst {reducer, actions} = skill;\nexport const {setSkills} = actions;\n\nexport default reducer\n","import {createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    address: '',\n    call: '',\n    mail: [],\n};\n\nconst contact = createSlice({\n    name: 'introduction',\n    initialState: initialState,\n    reducers: {\n        setContact(state, action) {\n            state.address = action.payload.address;\n            state.call = action.payload.call;\n            state.mail = action.payload.mail;\n            return state\n        }\n    }\n});\n\nconst {reducer, actions} = contact;\nexport const {setContact} = actions;\n\nexport default reducer\n","import React, {Suspense, useEffect} from 'react'\nimport './index.scss'\nimport Introduction from \"../../components/Introduction/introduction\";\nimport {useDispatch} from \"react-redux\";\nimport homeApi from \"../../../../api/homeApi\";\nimport {setIntroduction} from './../../slices/introductionSlice';\nimport {setProfile} from './../../slices/profileSlice';\nimport {setProject} from './../../slices/projectSlice';\nimport {setSkills} from './../../slices/skillsSlice';\nimport {setContact} from './../../slices/contactSlice';\n\nconst types = [\"bounceIn\", \"bounceInDown\", \"bounceInLeft\", \"bounceInRight\", \"bounceInUp\",\n    \"fadeIn\", \"fadeInDown\", \"fadeInLeft\", \"fadeInRight\", \"fadeInUp\", \"flip\", \"flipInX\", \"flipInY\", \"lightSpeedIn\", \"rotateIn\",\n    \"rotateInDownLeft\", \"rotateInDownRight\", \"rotateInUpLeft\", \"rotateInUpRight\", \"slideInUp\", \"slideInDown\", \"slideInLeft\",\n    \"slideInRight\", \"zoomIn\", \"zoomInDown\", \"zoomInLeft\", \"zoomInRight\", \"zoomInUp\"];\n\nconst Profile = React.lazy(() => import('../../components/Profile/profile'));\nconst Portfolio = React.lazy(() => import('../../components/Portfolio/portfolio'));\nconst Skills = React.lazy(() => import('../../components/Skills/skills'));\nconst Contact = React.lazy(() => import('../../components/Contact/contact'));\n\nfunction Mycv() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let res = await homeApi.fetchData();\n            const actionIntroduction = setIntroduction(res.introduction);\n            const actionProfile = setProfile(res.profile);\n            const actionProject = setProject(res.projects);\n            const actionSkill = setSkills(res.skill);\n            const actionContact = setContact(res.contact);\n            dispatch(actionIntroduction);\n            dispatch(actionProfile);\n            dispatch(actionProject);\n            dispatch(actionSkill);\n            dispatch(actionContact);\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <Suspense fallback={<div id=\"preloader\"><div className=\"classy-load\"/></div>}>\n            <div className=\"welcome_area resume_version\" id=\"home_page\">\n                {/* Introduction Area Start */}\n                <Introduction/>\n                <div className=\"resume_content_navigation_area\">\n                    <Profile types={types}/>\n                    <Skills types={types}/>\n                    <Portfolio types={types}/>\n                    <Contact types={types}/>\n                </div>\n            </div>\n        </Suspense>\n    )\n}\n\nexport default Mycv\n","import React from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router\n} from \"react-router-dom\";\nimport history from './services/history'\nimport Mycv from \"./features/home/pages/index\";\n\nfunction App() {\n  return (\n      <Router history={history}>\n        <Mycv />\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport introductionReducer from '../features/home/slices/introductionSlice';\nimport profileReducer from '../features/home/slices/profileSlice';\nimport projectReducer from '../features/home/slices/projectSlice';\nimport skillsReducer from '../features/home/slices/skillsSlice';\nimport contactReducer from '../features/home/slices/contactSlice';\n\nconst rootReducer = {\n  introduction: introductionReducer,\n  profile: profileReducer,\n  project: projectReducer,\n  skill: skillsReducer,\n  contact: contactReducer,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport {Provider} from 'react-redux'\nimport store from './app/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        {/*<React.StrictMode>*/}\n            <App/>\n        {/*</React.StrictMode>*/}\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}